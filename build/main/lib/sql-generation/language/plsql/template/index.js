import { commands } from '../commands.js';
export const COLUMN_TEMPLATE = `<column_name> <column_type> <column_constraint>`;
export const COLUMN_COMMENT_TEMPLATE = `${commands.comment} ${commands.on} ${commands.column} <object_name> ${commands.is} '<comment>';`;
export const CONSTRAINTS_TEMPLATE = `${commands.constraint} <constraint_name> <constraint_type> <condition> <column_names> <references>`;
export const TABLE_TEMPLATE = `${commands.create} ${commands.table} <name>(<columns> <constraints>);`;
export const INDEX_TEMPLATE = `${commands.create} <is_unique> ${commands.index} <index_name> ${commands.on} <table_name> <columns>;`;
export const SEQUENCE_TEMPLATE = `${commands.create} ${commands.sequence} <sequence_name> <min_value> <max_value> <start_with_value> ${commands.increment} ${commands.by} <increment_value> <cache_value>;`;
export const GRANT_TEMPLATE = `${commands.grant} <privileges> ${commands.on} <object> ${commands.to} <user>;`;
export const DROP_TEMPLATE = `${commands.drop} <database_object> <object_name>;`;
export const REVOKE_GRANT_TEMPLATE = `${commands.revoke} <privilege> ${commands.on} <object> ${commands.from} <user>;`;
export const FUNCTION_TEMPLATE = `${commands.create} <replace> ${commands.function} <object_name> <parameter> ${commands.return} <return_type> <is_or_as> ${commands.begin} <body> ${commands.end} <object_name>;`;
export const PARAMETER_TEMPLATE = `<parameter_name> <in> <out> <type>`;
export const PACKAGE_TEMPLATE = `${commands.create} <replace> ${commands.package} <object_name> <is_or_as> <declarations>; ${commands.end} <object_name>;`;
export const PROCEDURE_TEMPLATE = `${commands.create} <replace> ${commands.procedure} <object_name> <parameters> <declaration> <is_or_as> ${commands.begin} <execution_body> ${commands.exception} <exception_body> ${commands.end} <object_name>;`;
export const TRIGGER_TEMPLATE = `${commands.create} <replace> ${commands.trigger} <object_name> <trigger_event> ${commands.on} <table_name> <each_row> <status> <condition> <declarations> ${commands.begin} <execution_body> ${commands.exception} <exception_body> ${commands.end};`;
export const VIEW_TEMPLATE = `${commands.create} ${commands.view} <object_name> ${commands.as} ${commands.select} <columns> ${commands.from} <tables> <conditions>;`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL3NxbC1nZW5lcmF0aW9uL2xhbmd1YWdlL3Bsc3FsL3RlbXBsYXRlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUxQyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsaURBQWlELENBQUM7QUFFakYsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsR0FBRyxRQUFRLENBQUMsT0FBTyxJQUFJLFFBQVEsQ0FBQyxFQUFFLElBQUksUUFBUSxDQUFDLE1BQU0sa0JBQWtCLFFBQVEsQ0FBQyxFQUFFLGVBQWUsQ0FBQztBQUV6SSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxHQUFHLFFBQVEsQ0FBQyxVQUFVLDhFQUE4RSxDQUFDO0FBRXpJLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLEtBQUssbUNBQW1DLENBQUM7QUFFdEcsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sZ0JBQWdCLFFBQVEsQ0FBQyxLQUFLLGlCQUFpQixRQUFRLENBQUMsRUFBRSwwQkFBMEIsQ0FBQztBQUVySSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLFFBQVEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLFFBQVEsK0RBQStELFFBQVEsQ0FBQyxTQUFTLElBQUksUUFBUSxDQUFDLEVBQUUsbUNBQW1DLENBQUM7QUFFNU0sTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLEdBQUcsUUFBUSxDQUFDLEtBQUssaUJBQWlCLFFBQVEsQ0FBQyxFQUFFLGFBQWEsUUFBUSxDQUFDLEVBQUUsVUFBVSxDQUFDO0FBRTlHLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxHQUFHLFFBQVEsQ0FBQyxJQUFJLG1DQUFtQyxDQUFDO0FBRWpGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sZ0JBQWdCLFFBQVEsQ0FBQyxFQUFFLGFBQWEsUUFBUSxDQUFDLElBQUksVUFBVSxDQUFDO0FBRXZILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sY0FBYyxRQUFRLENBQUMsUUFBUSw4QkFBOEIsUUFBUSxDQUFDLE1BQU0sNkJBQTZCLFFBQVEsQ0FBQyxLQUFLLFdBQVcsUUFBUSxDQUFDLEdBQUcsaUJBQWlCLENBQUM7QUFFbk4sTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsb0NBQW9DLENBQUM7QUFFdkUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxjQUFjLFFBQVEsQ0FBQyxPQUFPLDZDQUE2QyxRQUFRLENBQUMsR0FBRyxpQkFBaUIsQ0FBQztBQUUzSixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLFFBQVEsQ0FBQyxNQUFNLGNBQWMsUUFBUSxDQUFDLFNBQVMsd0RBQXdELFFBQVEsQ0FBQyxLQUFLLHFCQUFxQixRQUFRLENBQUMsU0FBUyxxQkFBcUIsUUFBUSxDQUFDLEdBQUcsaUJBQWlCLENBQUM7QUFFcFAsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxjQUFjLFFBQVEsQ0FBQyxPQUFPLGtDQUFrQyxRQUFRLENBQUMsRUFBRSxnRUFBZ0UsUUFBUSxDQUFDLEtBQUsscUJBQXFCLFFBQVEsQ0FBQyxTQUFTLHFCQUFxQixRQUFRLENBQUMsR0FBRyxHQUFHLENBQUM7QUFFdlIsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sSUFBSSxRQUFRLENBQUMsSUFBSSxrQkFBa0IsUUFBUSxDQUFDLEVBQUUsSUFBSSxRQUFRLENBQUMsTUFBTSxjQUFjLFFBQVEsQ0FBQyxJQUFJLHlCQUF5QixDQUFDIn0=