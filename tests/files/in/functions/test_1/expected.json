{
  "result": "CREATE\nOR REPLACE FUNCTION get_address (person_id IN NUMBER) RETURN VARCHAR2 IS person_details VARCHAR2(130);\n\nBEGIN\nSELECT\n  'Name-' || person.first_name || ' ' || person.last_name || ',City-' || address.city || ', State-' || address.state || ',Country-' || address.country || ', ZIP Code-' || address.zip_code INTO person_details\nFROM\n  person_info person,\n  person_address address\nWHERE\n  person.id = person_id\n  AND address.person_id = person.id;\n\nRETURN(person_details);\n\nEND get_address;\n\nGRANT EXECUTE ON get_address TO PUBLIC;\n\nCREATE\nOR REPLACE FUNCTION is_palindrome (text VARCHAR2) RETURN VARCHAR2 IS reversedText VARCHAR2(150);\n\nBEGIN\nSELECT\n  REVERSE(text) INTO reversedText\nFROM\n  DUAL;\n\n-- Using UPPER to ignore case sensitivity.\nIF UPPER(text) = UPPER(reversedText) THEN RETURN('true');\n\nEND IF;\n\nRETURN ('false');\n\nEND is_palindrome;\n\nCREATE\nOR REPLACE FUNCTION MATH_FUNCTIONS.fsum (n1 IN NUMBER, n2 IN NUMBER) RETURN NUMBER IS n3 NUMBER(8);\n\nBEGIN\n  n3 := n1 + n2;\n\nRETURN n3;\n\nEND MATH_FUNCTIONS.fsum;\n\nGRANT EXECUTE ON MATH_FUNCTIONS.fsum TO PUBLIC;\n\nGRANT DEBUG ON MATH_FUNCTIONS.fsum TO user1;"
}
